{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"changelog/","text":"Changelog \u00b6 Material for Software Developers \u00b6 1.0.0 _ October 20, 2020 \u00b6 Initial release","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#material-for-software-developers","text":"","title":"Material for Software Developers"},{"location":"changelog/#1.0.0","text":"Initial release","title":"1.0.0 _ October 20, 2020"},{"location":"syllabus/syllabus/","text":"Recep Tayyip Erdogan University \u00b6 Faculty of Engineering and Architecture \u00b6 Computer Engineering \u00b6 CE204 Object-Oriented Programming \u00b6 Syllabus \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. U\u011fur CORUH Contact Information ugur.coruh@erdogan.edu.tr Office No F-301 Google Classroom Code TBD Lecture Hours and Days TBD Lecture Classroom \u0130BBF 402 Level-4 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starting with [CE204] tag for the fast response and write formal, clear, and short emails Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite TBD Corequisite TBD Requirement TBD *TBD: To Be Defined. A.Course Description \u00b6 This course continues the CE103 Algorithms and Programming I course. This course taught programming skills in Algorithms and Programming I course met. This course taught programming skills in Algorithms and Programming I with common problems and their solution algorithms. This lecture is about analyzing and understanding how algorithms work for common issues. The class will be based on expertise sharing and guiding students to find learning methods and practice for algorithm and programming topics. By making programming applications and projects in the courses, the learning process will be strengthened by practicing rather than theory. B.Course Learning Outcomes \u00b6 After completing this course satisfactorily, a student will be able to: Interpret a computational problem specification and algorithmic solution and implement a C/C++, Java or C# application to solve that problem. Argue the correctness of algorithms using inductive proofs and invariants. Understand algorithm design steps Argue algorithm cost calculation for time complexity and asymptotic notation Analyze recursive algorithms complexity Understand divide-and-conquer, dynamic programming and greedy approaches. Understand graphs and graph related algorithms. Understand hashing and encryption operations input and outputs. C.Course Topics \u00b6 Algorithms Basics, Pseudocode Algorithms Analysis for Time Complexity and Asymptotic Notation Sorting Problems (Insertion and Merge Sorts) Recursive Algorithms Divide-and-Conquer Analysis (Merge Sort, Binary Search) Matrix Multiplication Problem Quicksort Analysis Heaps, Heap Sort and Priority Queues Linked Lists, Radix Sort, You should have a laptop for programming practices during this course and Counting Sort. Convex Hull Dynamic Programming Greedy Algorithms Graphs and Graphs Search Algorithms Breadth-First Search Depth-First Search and Topological Sort Graph Structure Algorithms Strongly Connected Components Minimum Spanning Tree Disjoint Set Operations Single Source Shortest Path Algorithm Q-Learning Shortest Path Implementation Network Flow and Applications Hashing and Encryption D.Textbooks and Required Hardware or Equipment \u00b6 This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Paul Deitel and Harvey Deitel. 2012. C How to Program (7 th . ed.). Prentice Hall Press, USA. Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Introduction to Algorithms, Third Edition By Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein Problem Solving and Program Design in C, J.R. Hanly, and E.B. Koffman, 6 th Edition. Robert Sedgewick and Kevin Wayne. 2011. Algorithms (4 th . ed.). Addison-Wesley Professional. Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices. E.Grading System \u00b6 Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week home works or projects as follows. taught Algorithms and Programming I programming skills \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\] F. Instructional Strategies and Methods \u00b6 The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, home works, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken. G. Late Homework \u00b6 Throughout the semester, assignments must be submitted as specified by the announced deadline. Your grade will be reduced by 10% of the full points for each calendar day for overdue assignments. Overdue assignments will not be accepted after three (3) days. Unexpected situations must be reported to the instructor for late home works by students. H. Course Platform and Communication \u00b6 Google Classroom will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor as you need Algorithms and Programming I programming skills to complete the course with success I. Academic Integrity, Plagiarism & Cheating \u00b6 Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not. a. What is acceptable when preparing an assignment? \u00b6 Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you. b. What is not acceptable? \u00b6 Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it. J. Expectations \u00b6 You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication. K. Lecture Content and Syllabus Updates \u00b6 If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this. Course Schedule Overview \u00b6 Weeks Dates Subjects Other Tasks Week 1 TBD Course Plan and Communication Grading System, Assignments and Exams. Algorithms Basics, Pseudocode Algorithm Cost Calculation for Time Complexity. Worst, Average and Best Case Summary Sorting Problem (Insertion and Merge Sort Analysis) TBD Week 2 TBD Solving Recurrences (Recursion Tree, Master Method and Back-Substitution) Divide-and-Conquer Analysis (Merge Sort, Binary Search) Recurrence Solution TBD Week 3 TBD RAM (Random Access Machine Model) Asymptotic Notation (Big O, Big Teta, Big Omega,Small o,Small omega) Matrix Multiplication(Traditional,Recursive,Strassen) TBD Week 4 TBD Quicksort and Analysis ( Hoare and Lomuto Partitioning, Recursive Sorting) Randomized Quicksort and Selection Recursive, Medians) Heaps (Max / Min Heap, Heap Data Structure, Iterative and Recursive Heapify, Extract-Max, Build Heap) Heap Sort, Priority Queues, Linked Lists, Radix Sort,Counting Sort TBD Week 5 TBD Convex Hull (Divide & Conquer) Dynamic Programming (Fibonacci Numbers) Divide-and-Conquer (DAC) vs Dynamic Programming (DP) Development of a DP Algorithms Matrix-Chain Multiplication and Analysis TBD Week-6 TBD Elements of Dynamic Programming Recursive Matrix Chain Order Memoization (Top-Down Approach, RMC, MemoizedMatrixChain, LookupC) Dynamic Programming vs. Memoization Longest Common Subsequence (LCS) Most Common Dynamic Programming Interview Questions TBD Week-7 TBD Greedy Algorithms and Dynamic Programming Differences Greedy Algorithms (Activity Selection Problem, Knapsack Problems) TBD Week-8 TBD Midterm TBD Week-9 TBD Heap Data Structure, Heap Sort, Huffman Coding TBD Week-10 TBD Introduction to Graphs, Gr,aphs and Representation, BFS (Breath-First Search), DFS (Depth-First Search), Topological Order, SCC (Strongly Connected Components), MST, Prim, Kruskal TBD Week-11 TBD Disjoint Sets and Kruskal Relationships,Single-Source Shortest Path,(Bellman- Ford,Dijkstra),Q-Learning Shortest Path,Max-Flow Min-Cut (Ford-Fulkerson,Edmond\u2019s Karp,Dinic) TBD Week-12 TBD Crypto++ Library Usage, Hashing and Integrity Control, Cryptographic Hash Functions (SHA-1,SHA-256,SHA-512,H-MAC), Checksums(MD5,CRC32) TBD Week-13 TBD Symmetric Encryption Algorithms (AES, DES, TDES), Symmetric Encryption Modes (ECB, CBC), Asymmetric Encryption, Key Pairs (Public-Private Key Pairs), Signature Generation and Validation TBD Week-14 TBD OTP Calculation(Time-based, Counter-based),File Encryption and Decryption and Integrity Control Operations TBD Week-15 TBD Review TBD Week-16 TBD Final TBD Ended \u00b6","title":"Syllabus"},{"location":"syllabus/syllabus/#recep-tayyip-erdogan-university","text":"","title":"Recep Tayyip Erdogan University"},{"location":"syllabus/syllabus/#faculty-of-engineering-and-architecture","text":"","title":"Faculty of Engineering and Architecture"},{"location":"syllabus/syllabus/#computer-engineering","text":"","title":"Computer Engineering"},{"location":"syllabus/syllabus/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"syllabus/syllabus/#syllabus","text":"","title":"Syllabus"},{"location":"syllabus/syllabus/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. U\u011fur CORUH Contact Information ugur.coruh@erdogan.edu.tr Office No F-301 Google Classroom Code TBD Lecture Hours and Days TBD Lecture Classroom \u0130BBF 402 Level-4 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starting with [CE204] tag for the fast response and write formal, clear, and short emails Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite TBD Corequisite TBD Requirement TBD *TBD: To Be Defined.","title":"Spring Semester, 2021-2022"},{"location":"syllabus/syllabus/#acourse-description","text":"This course continues the CE103 Algorithms and Programming I course. This course taught programming skills in Algorithms and Programming I course met. This course taught programming skills in Algorithms and Programming I with common problems and their solution algorithms. This lecture is about analyzing and understanding how algorithms work for common issues. The class will be based on expertise sharing and guiding students to find learning methods and practice for algorithm and programming topics. By making programming applications and projects in the courses, the learning process will be strengthened by practicing rather than theory.","title":"A.Course Description"},{"location":"syllabus/syllabus/#bcourse-learning-outcomes","text":"After completing this course satisfactorily, a student will be able to: Interpret a computational problem specification and algorithmic solution and implement a C/C++, Java or C# application to solve that problem. Argue the correctness of algorithms using inductive proofs and invariants. Understand algorithm design steps Argue algorithm cost calculation for time complexity and asymptotic notation Analyze recursive algorithms complexity Understand divide-and-conquer, dynamic programming and greedy approaches. Understand graphs and graph related algorithms. Understand hashing and encryption operations input and outputs.","title":"B.Course Learning Outcomes"},{"location":"syllabus/syllabus/#ccourse-topics","text":"Algorithms Basics, Pseudocode Algorithms Analysis for Time Complexity and Asymptotic Notation Sorting Problems (Insertion and Merge Sorts) Recursive Algorithms Divide-and-Conquer Analysis (Merge Sort, Binary Search) Matrix Multiplication Problem Quicksort Analysis Heaps, Heap Sort and Priority Queues Linked Lists, Radix Sort, You should have a laptop for programming practices during this course and Counting Sort. Convex Hull Dynamic Programming Greedy Algorithms Graphs and Graphs Search Algorithms Breadth-First Search Depth-First Search and Topological Sort Graph Structure Algorithms Strongly Connected Components Minimum Spanning Tree Disjoint Set Operations Single Source Shortest Path Algorithm Q-Learning Shortest Path Implementation Network Flow and Applications Hashing and Encryption","title":"C.Course Topics"},{"location":"syllabus/syllabus/#dtextbooks-and-required-hardware-or-equipment","text":"This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Paul Deitel and Harvey Deitel. 2012. C How to Program (7 th . ed.). Prentice Hall Press, USA. Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Introduction to Algorithms, Third Edition By Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein Problem Solving and Program Design in C, J.R. Hanly, and E.B. Koffman, 6 th Edition. Robert Sedgewick and Kevin Wayne. 2011. Algorithms (4 th . ed.). Addison-Wesley Professional. Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices.","title":"D.Textbooks and Required Hardware or Equipment"},{"location":"syllabus/syllabus/#egrading-system","text":"Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week home works or projects as follows. taught Algorithms and Programming I programming skills \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\]","title":"E.Grading System"},{"location":"syllabus/syllabus/#f-instructional-strategies-and-methods","text":"The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, home works, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken.","title":"F. Instructional Strategies and Methods"},{"location":"syllabus/syllabus/#g-late-homework","text":"Throughout the semester, assignments must be submitted as specified by the announced deadline. Your grade will be reduced by 10% of the full points for each calendar day for overdue assignments. Overdue assignments will not be accepted after three (3) days. Unexpected situations must be reported to the instructor for late home works by students.","title":"G. Late Homework"},{"location":"syllabus/syllabus/#h-course-platform-and-communication","text":"Google Classroom will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor as you need Algorithms and Programming I programming skills to complete the course with success","title":"H. Course Platform and Communication"},{"location":"syllabus/syllabus/#i-academic-integrity-plagiarism-cheating","text":"Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not.","title":"I. Academic Integrity, Plagiarism &amp; Cheating"},{"location":"syllabus/syllabus/#a-what-is-acceptable-when-preparing-an-assignment","text":"Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you.","title":"a. What is acceptable when preparing an assignment?"},{"location":"syllabus/syllabus/#b-what-is-not-acceptable","text":"Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it.","title":"b. What is not acceptable?"},{"location":"syllabus/syllabus/#j-expectations","text":"You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication.","title":"J. Expectations"},{"location":"syllabus/syllabus/#k-lecture-content-and-syllabus-updates","text":"If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this.","title":"K. Lecture Content and Syllabus Updates"},{"location":"syllabus/syllabus/#course-schedule-overview","text":"Weeks Dates Subjects Other Tasks Week 1 TBD Course Plan and Communication Grading System, Assignments and Exams. Algorithms Basics, Pseudocode Algorithm Cost Calculation for Time Complexity. Worst, Average and Best Case Summary Sorting Problem (Insertion and Merge Sort Analysis) TBD Week 2 TBD Solving Recurrences (Recursion Tree, Master Method and Back-Substitution) Divide-and-Conquer Analysis (Merge Sort, Binary Search) Recurrence Solution TBD Week 3 TBD RAM (Random Access Machine Model) Asymptotic Notation (Big O, Big Teta, Big Omega,Small o,Small omega) Matrix Multiplication(Traditional,Recursive,Strassen) TBD Week 4 TBD Quicksort and Analysis ( Hoare and Lomuto Partitioning, Recursive Sorting) Randomized Quicksort and Selection Recursive, Medians) Heaps (Max / Min Heap, Heap Data Structure, Iterative and Recursive Heapify, Extract-Max, Build Heap) Heap Sort, Priority Queues, Linked Lists, Radix Sort,Counting Sort TBD Week 5 TBD Convex Hull (Divide & Conquer) Dynamic Programming (Fibonacci Numbers) Divide-and-Conquer (DAC) vs Dynamic Programming (DP) Development of a DP Algorithms Matrix-Chain Multiplication and Analysis TBD Week-6 TBD Elements of Dynamic Programming Recursive Matrix Chain Order Memoization (Top-Down Approach, RMC, MemoizedMatrixChain, LookupC) Dynamic Programming vs. Memoization Longest Common Subsequence (LCS) Most Common Dynamic Programming Interview Questions TBD Week-7 TBD Greedy Algorithms and Dynamic Programming Differences Greedy Algorithms (Activity Selection Problem, Knapsack Problems) TBD Week-8 TBD Midterm TBD Week-9 TBD Heap Data Structure, Heap Sort, Huffman Coding TBD Week-10 TBD Introduction to Graphs, Gr,aphs and Representation, BFS (Breath-First Search), DFS (Depth-First Search), Topological Order, SCC (Strongly Connected Components), MST, Prim, Kruskal TBD Week-11 TBD Disjoint Sets and Kruskal Relationships,Single-Source Shortest Path,(Bellman- Ford,Dijkstra),Q-Learning Shortest Path,Max-Flow Min-Cut (Ford-Fulkerson,Edmond\u2019s Karp,Dinic) TBD Week-12 TBD Crypto++ Library Usage, Hashing and Integrity Control, Cryptographic Hash Functions (SHA-1,SHA-256,SHA-512,H-MAC), Checksums(MD5,CRC32) TBD Week-13 TBD Symmetric Encryption Algorithms (AES, DES, TDES), Symmetric Encryption Modes (ECB, CBC), Asymmetric Encryption, Key Pairs (Public-Private Key Pairs), Signature Generation and Validation TBD Week-14 TBD OTP Calculation(Time-based, Counter-based),File Encryption and Decryption and Integrity Control Operations TBD Week-15 TBD Review TBD Week-16 TBD Final TBD","title":"Course Schedule Overview"},{"location":"syllabus/syllabus/#ended","text":"","title":"Ended"},{"location":"week-1/ce204-week-1/","text":"CE204 Object-Oriented Programming \u00b6 Week-1 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-1 (Intro)"},{"location":"week-1/ce204-week-1/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-1/ce204-week-1/#week-1-tbd","text":"","title":"Week-1 (TBD)"},{"location":"week-1/ce204-week-1/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-1/ce204-week-1/#title","text":"","title":"Title"},{"location":"week-1/ce204-week-1/#outline","text":"TBD","title":"Outline"},{"location":"week-1/ce204-week-1/#references","text":"TBD","title":"References"},{"location":"week-10/ce204-week-10/","text":"CE204 Object-Oriented Programming \u00b6 Week-10 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-10 (TBD)"},{"location":"week-10/ce204-week-10/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-10/ce204-week-10/#week-10-tbd","text":"","title":"Week-10 (TBD)"},{"location":"week-10/ce204-week-10/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-10/ce204-week-10/#title","text":"","title":"Title"},{"location":"week-10/ce204-week-10/#outline","text":"TBD","title":"Outline"},{"location":"week-10/ce204-week-10/#references","text":"TBD","title":"References"},{"location":"week-11/ce204-week-11/","text":"CE204 Object-Oriented Programming \u00b6 Week-11 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-11 (TBD)"},{"location":"week-11/ce204-week-11/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-11/ce204-week-11/#week-11-tbd","text":"","title":"Week-11 (TBD)"},{"location":"week-11/ce204-week-11/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-11/ce204-week-11/#title","text":"","title":"Title"},{"location":"week-11/ce204-week-11/#outline","text":"TBD","title":"Outline"},{"location":"week-11/ce204-week-11/#references","text":"TBD","title":"References"},{"location":"week-12/ce204-week-12/","text":"CE204 Object-Oriented Programming \u00b6 Week-12 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-12 (TBD)"},{"location":"week-12/ce204-week-12/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-12/ce204-week-12/#week-12-tbd","text":"","title":"Week-12 (TBD)"},{"location":"week-12/ce204-week-12/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-12/ce204-week-12/#title","text":"","title":"Title"},{"location":"week-12/ce204-week-12/#outline","text":"TBD","title":"Outline"},{"location":"week-12/ce204-week-12/#references","text":"TBD","title":"References"},{"location":"week-13/ce204-week-13/","text":"CE204 Object-Oriented Programming \u00b6 Week-13 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-13 (TBD)"},{"location":"week-13/ce204-week-13/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-13/ce204-week-13/#week-13-tbd","text":"","title":"Week-13 (TBD)"},{"location":"week-13/ce204-week-13/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-13/ce204-week-13/#title","text":"","title":"Title"},{"location":"week-13/ce204-week-13/#outline","text":"TBD","title":"Outline"},{"location":"week-13/ce204-week-13/#references","text":"TBD","title":"References"},{"location":"week-14/ce204-week-14/","text":"CE204 Object-Oriented Programming \u00b6 Week-14 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-14 (TBD)"},{"location":"week-14/ce204-week-14/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-14/ce204-week-14/#week-14-tbd","text":"","title":"Week-14 (TBD)"},{"location":"week-14/ce204-week-14/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-14/ce204-week-14/#title","text":"","title":"Title"},{"location":"week-14/ce204-week-14/#outline","text":"TBD","title":"Outline"},{"location":"week-14/ce204-week-14/#references","text":"TBD","title":"References"},{"location":"week-15/ce204-week-15/","text":"CE204 Object-Oriented Programming \u00b6 Week-15 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-15 (TBD)"},{"location":"week-15/ce204-week-15/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-15/ce204-week-15/#week-15-tbd","text":"","title":"Week-15 (TBD)"},{"location":"week-15/ce204-week-15/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-15/ce204-week-15/#title","text":"","title":"Title"},{"location":"week-15/ce204-week-15/#outline","text":"TBD","title":"Outline"},{"location":"week-15/ce204-week-15/#references","text":"TBD","title":"References"},{"location":"week-16/ce204-week-16-final/","text":"CE204 Object-Oriented Programming \u00b6 Week-16 (Final) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-16 (Final)"},{"location":"week-16/ce204-week-16-final/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-16/ce204-week-16-final/#week-16-final","text":"","title":"Week-16 (Final)"},{"location":"week-16/ce204-week-16-final/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-16/ce204-week-16-final/#title","text":"","title":"Title"},{"location":"week-16/ce204-week-16-final/#outline","text":"TBD","title":"Outline"},{"location":"week-16/ce204-week-16-final/#references","text":"TBD","title":"References"},{"location":"week-2/ce204-week-2/","text":"CE204 Object-Oriented Programming \u00b6 Week-2 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-2 (TBD)"},{"location":"week-2/ce204-week-2/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-2/ce204-week-2/#week-2-tbd","text":"","title":"Week-2 (TBD)"},{"location":"week-2/ce204-week-2/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-2/ce204-week-2/#title","text":"","title":"Title"},{"location":"week-2/ce204-week-2/#outline","text":"TBD","title":"Outline"},{"location":"week-2/ce204-week-2/#references","text":"TBD","title":"References"},{"location":"week-3/ce204-week-3/","text":"CE204 Object-Oriented Programming \u00b6 Week-3 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-3 (TBD)"},{"location":"week-3/ce204-week-3/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-3/ce204-week-3/#week-3-tbd","text":"","title":"Week-3 (TBD)"},{"location":"week-3/ce204-week-3/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-3/ce204-week-3/#title","text":"","title":"Title"},{"location":"week-3/ce204-week-3/#outline","text":"TBD","title":"Outline"},{"location":"week-3/ce204-week-3/#references","text":"TBD","title":"References"},{"location":"week-4/ce204-week-4/","text":"CE204 Object-Oriented Programming \u00b6 Week-4 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-4 (TBD)"},{"location":"week-4/ce204-week-4/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-4/ce204-week-4/#week-4-tbd","text":"","title":"Week-4 (TBD)"},{"location":"week-4/ce204-week-4/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-4/ce204-week-4/#title","text":"","title":"Title"},{"location":"week-4/ce204-week-4/#outline","text":"TBD","title":"Outline"},{"location":"week-4/ce204-week-4/#references","text":"TBD","title":"References"},{"location":"week-5/ce204-week-5/","text":"CE204 Object-Oriented Programming \u00b6 Week-5 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-5 (TBD)"},{"location":"week-5/ce204-week-5/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-5/ce204-week-5/#week-5-tbd","text":"","title":"Week-5 (TBD)"},{"location":"week-5/ce204-week-5/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-5/ce204-week-5/#title","text":"","title":"Title"},{"location":"week-5/ce204-week-5/#outline","text":"TBD","title":"Outline"},{"location":"week-5/ce204-week-5/#references","text":"TBD","title":"References"},{"location":"week-6/ce204-week-6/","text":"CE204 Object-Oriented Programming \u00b6 Week-6 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-6 (TBD)"},{"location":"week-6/ce204-week-6/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-6/ce204-week-6/#week-6-tbd","text":"","title":"Week-6 (TBD)"},{"location":"week-6/ce204-week-6/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-6/ce204-week-6/#title","text":"","title":"Title"},{"location":"week-6/ce204-week-6/#outline","text":"TBD","title":"Outline"},{"location":"week-6/ce204-week-6/#references","text":"TBD","title":"References"},{"location":"week-7/ce204-week-7/","text":"CE204 Object-Oriented Programming \u00b6 Week-7 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-7 (TBD)"},{"location":"week-7/ce204-week-7/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-7/ce204-week-7/#week-7-tbd","text":"","title":"Week-7 (TBD)"},{"location":"week-7/ce204-week-7/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-7/ce204-week-7/#title","text":"","title":"Title"},{"location":"week-7/ce204-week-7/#outline","text":"TBD","title":"Outline"},{"location":"week-7/ce204-week-7/#references","text":"TBD","title":"References"},{"location":"week-8/ce204-week-8-midterm/","text":"CE204 Object-Oriented Programming \u00b6 Week-8 (Midterm) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-8 (Midterm)"},{"location":"week-8/ce204-week-8-midterm/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-8/ce204-week-8-midterm/#week-8-midterm","text":"","title":"Week-8 (Midterm)"},{"location":"week-8/ce204-week-8-midterm/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-8/ce204-week-8-midterm/#title","text":"","title":"Title"},{"location":"week-8/ce204-week-8-midterm/#outline","text":"TBD","title":"Outline"},{"location":"week-8/ce204-week-8-midterm/#references","text":"TBD","title":"References"},{"location":"week-9/ce204-week-9/","text":"CE204 Object-Oriented Programming \u00b6 Week-9 (TBD) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Title \u00b6 Outline \u00b6 TBD References \u00b6 TBD","title":"Week-9 (TBD)"},{"location":"week-9/ce204-week-9/#ce204-object-oriented-programming","text":"","title":"CE204 Object-Oriented Programming"},{"location":"week-9/ce204-week-9/#week-9-tbd","text":"","title":"Week-9 (TBD)"},{"location":"week-9/ce204-week-9/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-9/ce204-week-9/#title","text":"","title":"Title"},{"location":"week-9/ce204-week-9/#outline","text":"TBD","title":"Outline"},{"location":"week-9/ce204-week-9/#references","text":"TBD","title":"References"}]}